// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"t9ATe9we/hcAAP//64rVo74tAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
